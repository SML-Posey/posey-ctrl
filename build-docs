# This was helpful for creating the GitHub pages documentation:
# https://jiafulow.github.io/blog/2020/07/09/create-gh-pages-branch-in-existing-repo/
#
# (Copied for reference:)
# It’s easy to serve a website using GitHub Pages by creating the gh-pages branch in a GitHub repo. The instructions can be found here.

# In my case, I have an existing repository that has some stuff. I want to use GitHub Pages to serve some .md files, but I don’t want to include the stuff from my master branch. What I had to do was:

# Create/checkout an orphan gh-pages branch.
# An orphan branch is not connected to the other branches and commits, and its working tree has no files at all. See here for more info.
# Commit .md files to the branch.
# To create the orphan gh-pages branch (based on instructions from Hugo):

# git checkout --orphan gh-pages
# git reset --hard
# git commit --allow-empty -m "Initializing gh-pages branch"
# git push origin gh-pages
# git checkout master
# Once the branch is pushed to GitHub, you have to go to the Settings page of the repository. In the section “GitHub Pages”, select gh-pages as the source. The step is described in more details here. If successful, you will see a message saying “Your site is published at https://your-username.github.io/your-repository/”.

# Now you can add files to the gh-pages branch, and they will show up on your new website:

# git checkout gh-pages
# # Adding files ...
# git commit -m "Add files"
# git push origin gh-pages
# git checkout master


# Run this to generate.
sphinx-build -b html _docs/source docs

# To publish,
# git checkout gh-pages
# git add docs
# git commit -m "Updated documentation"
# git push
